-- =====================================================
-- TESTE DE PERMISS√ïES PARA DIFERENTES ROLES
-- =====================================================
-- Este script testa se as pol√≠ticas RLS est√£o permitindo
-- que diferentes roles acessem as tarefas

-- 1. Verificar usu√°rios e suas roles
SELECT 
  'Usu√°rios e Roles' as info,
  id,
  full_name,
  role,
  email
FROM public.profiles 
ORDER BY role, full_name;

-- 2. Verificar tarefas existentes
SELECT 
  'Tarefas Existentes' as info,
  COUNT(*) as total_tasks,
  COUNT(CASE WHEN status = 'pending' THEN 1 END) as pending,
  COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed
FROM public.card_tasks;

-- 3. Verificar pol√≠ticas RLS ativas
SELECT 
  'Pol√≠ticas RLS Ativas' as info,
  policyname,
  cmd,
  permissive,
  qual
FROM pg_policies 
WHERE tablename = 'card_tasks'
ORDER BY policyname;

-- 4. Simular acesso de diferentes roles (usando fun√ß√µes de teste)
-- Nota: Este √© um teste conceitual - em produ√ß√£o seria testado com usu√°rios reais

-- Verificar se a pol√≠tica de SELECT permite acesso geral
DO $$
DECLARE
  select_policy_exists boolean;
  update_policy_exists boolean;
BEGIN
  -- Verificar se as pol√≠ticas existem
  SELECT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'card_tasks' 
    AND policyname = 'tasks_select_policy'
    AND cmd = 'SELECT'
  ) INTO select_policy_exists;
  
  SELECT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'card_tasks' 
    AND policyname = 'tasks_update_policy'
    AND cmd = 'UPDATE'
  ) INTO update_policy_exists;
  
  IF select_policy_exists AND update_policy_exists THEN
    RAISE NOTICE '‚úÖ Pol√≠ticas RLS configuradas corretamente!';
    RAISE NOTICE '   - SELECT: Permitido para qualquer usu√°rio autenticado';
    RAISE NOTICE '   - UPDATE: Permitido para qualquer usu√°rio autenticado';
    RAISE NOTICE '';
    RAISE NOTICE 'üéØ Todas as roles (Gestor, Vendedor, Analista) podem:';
    RAISE NOTICE '   - Ver tarefas ‚úÖ';
    RAISE NOTICE '   - Marcar/Desmarcar tarefas ‚úÖ';
  ELSE
    RAISE NOTICE '‚ùå Pol√≠ticas RLS n√£o configuradas corretamente!';
    RAISE NOTICE '   - SELECT policy exists: %', select_policy_exists;
    RAISE NOTICE '   - UPDATE policy exists: %', update_policy_exists;
  END IF;
END $$;

-- 5. Verificar se h√° tarefas com comment_id (vinculadas a coment√°rios)
SELECT 
  'Tarefas Vinculadas a Coment√°rios' as info,
  COUNT(*) as count
FROM public.card_tasks 
WHERE comment_id IS NOT NULL;

-- 6. Mostrar exemplo de tarefas
SELECT 
  'Exemplo de Tarefas' as info,
  id,
  card_title,
  description,
  status,
  comment_id,
  created_at
FROM public.card_tasks 
ORDER BY created_at DESC 
LIMIT 5;
